class Solution {
public:
    int findDuplicate(vector<int>& nums) {
    int slow = nums[0];
    int fast = nums[0];

    do {
        slow = nums[slow];
        fast = nums[nums[fast]];
    } while (slow != fast);

    slow = nums[0];
    while (slow != fast) {
        slow = nums[slow];
        fast = nums[fast];
    }

    return slow;
}

int main() {
    vector<int> nums1 = {1, 3, 4, 2, 2};
    cout << "Duplicate number: " << findDuplicate(nums1) << std::endl;

    vector<int> nums2 = {3, 1, 3, 4, 2};
    cout << "Duplicate number: " << findDuplicate(nums2) << std::endl;

    vector<int> nums3 = {3, 3, 3, 3, 3};
    cout << "Duplicate number: " << findDuplicate(nums3) << std::endl;

    return 0;
}

};